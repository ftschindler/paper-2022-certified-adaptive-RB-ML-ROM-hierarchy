00:01 [1mmain[0m: creating FOM:
01:34 [1mmain[0m: creating FOM:
01:34 [1mmain[0m:   discretizing took 0.1570441722869873s
01:34 [1mmain[0m:   grid has 2000 elements, FOM has 2121 DoFs, uses 1000 time steps
01:34 [1mmain[0m:   input parameter space is 2-dimensional:
01:34 [1mmain[0m:     ParameterSpace({Da: 1, Pe: 1}, {Da: (0.01, 10), Pe: (9, 11)})
01:40 [1mmain[0m: converting to pyMOR's builtin numpy/scipy model ...
01:53 [1mmain[0m: converting to pyMOR's builtin numpy/scipy model ...
01:53 [1mmain[0m: done (took 7.462501525878906e-05s)
01:55 [1mmain[0m: computing dual norm of output functional:
01:55 [1mmain[0m:   0.5965844702960149
01:56 [1mmain[0m: computing f(mu_ref={Da: [5.005], Pe: [10.0]}) ...
01:56 [1mmain[0m: average FOM output (solve + apply functional) time: 0.26664066314697266s
01:56 [1mmain[0m: computing ||f_mu_ref||_{L^2(0, T)}:
01:56 [1mmain[0m:   0.054881433775099485
02:09 [1mmain[0m: creating adaptive VKOGA model (for abs_output_tol=1e-05) with
02:09 [1mmain[0m: - abs_output_tol=1e-05
02:09 [1mmain[0m: - abs_state_tol=1.6762085669173005e-05
02:09 [1mmain[0m: - pod_l2_tol=1e-15
02:09 [1mmain[0m: took 0.01599287986755371s
02:28 [1mNelder-Mead[0m: preparing plot:
02:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 2.  10.5] ...
02:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 0
02:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 0
02:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
02:30 [1mAdaptiveModel[0m: computing output for mu={Da: [2.0], Pe: [10.5]}:
02:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
02:30 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.0], Pe: [10.5]} ...
02:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (5.467681935734603) above tolerance, discarding MLM output!
02:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
02:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   ROM solution not accurate enough for training (9.16497530185731)!
02:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (5.467681935734603) above tolerance, discarding ROM output!
02:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing FOM output (+live solution HAPOD):
02:31 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   extending ROM ...
02:32 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   solving ROM for MLM training ...
02:32 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.0], Pe: [10.5]}
02:32 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
02:32 |   [1mAdaptiveModel[0m: Constructing new ML-ROM-Reductor ...
02:32 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 1 samples ...
04:22 [1mmain[0m: creating adaptive VKOGA model (for abs_output_tol=1e-05) with
04:22 [1mmain[0m: - abs_output_tol=1e-05
04:22 [1mmain[0m: - abs_state_tol=1.6762085669173005e-05
04:22 [1mmain[0m: - pod_l2_tol=1e-15
04:22 [1mmain[0m: took 0.0172121524810791s
04:26 [1mNelder-Mead[0m: preparing plot:
04:28 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 2.  10.5] ...
04:28 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 0
04:28 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 0
04:28 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
04:28 [1mAdaptiveModel[0m: computing output for mu={Da: [2.0], Pe: [10.5]}:
04:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
04:28 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.0], Pe: [10.5]} ...
04:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (5.467681935734603) above tolerance, discarding MLM output!
04:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
04:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   ROM solution not accurate enough for training (9.16497530185731)!
04:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (5.467681935734603) above tolerance, discarding ROM output!
04:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing FOM output (+live solution HAPOD):
04:29 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   extending ROM ...
04:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   solving ROM for MLM training ...
04:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.0], Pe: [10.5]}
04:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
04:30 |   [1mAdaptiveModel[0m: Constructing new ML-ROM-Reductor ...
04:30 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 1 samples ...
05:32 [1mmain[0m: creating adaptive VKOGA model (for abs_output_tol=1e-05) with
05:32 [1mmain[0m: - abs_output_tol=1e-05
05:32 [1mmain[0m: - abs_state_tol=1.6762085669173005e-05
05:32 [1mmain[0m: - pod_l2_tol=1e-15
05:32 [1mmain[0m: took 0.020923137664794922s
05:34 [1mNelder-Mead[0m: preparing plot:
05:36 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 2.  10.5] ...
05:36 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 0
05:36 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 0
05:36 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
05:36 [1mAdaptiveModel[0m: computing output for mu={Da: [2.0], Pe: [10.5]}:
05:36 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
05:36 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.0], Pe: [10.5]} ...
05:36 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (5.467681935734603) above tolerance, discarding MLM output!
05:36 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
05:36 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   ROM solution not accurate enough for training (9.16497530185731)!
05:36 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (5.467681935734603) above tolerance, discarding ROM output!
05:36 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing FOM output (+live solution HAPOD):
05:38 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   extending ROM ...
05:38 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   solving ROM for MLM training ...
05:38 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.0], Pe: [10.5]}
05:38 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
05:38 |   [1mAdaptiveModel[0m: Constructing new ML-ROM-Reductor ...
05:38 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 1 samples ...
05:38 |   [1mAdaptiveModel[0m: returning FOM output!
05:38 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.011651561563703033
05:39 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 2.1 10.5] ...
05:39 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 1
05:39 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 0
05:39 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
05:39 [1mAdaptiveModel[0m: computing output for mu={Da: [2.1], Pe: [10.5]}:
05:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
05:39 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.1], Pe: [10.5]} ...
05:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.016462394272798594) above tolerance, discarding MLM output!
05:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
05:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   ROM solution not accurate enough for training (0.011454068490623628)!
05:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.006833319383212972) above tolerance, discarding ROM output!
05:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing FOM output (+live solution HAPOD):
05:41 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   extending ROM ...
05:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   prolonging MLM training data ...
05:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   solving ROM for MLM training ...
05:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.1], Pe: [10.5]}
05:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
05:42 |   [1mAdaptiveModel[0m: Constructing new ML-ROM-Reductor ...
05:42 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 2 samples ...
05:42 |   [1mAdaptiveModel[0m: returning FOM output!
05:42 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.011307224884506313
05:43 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 2. 11.] ...
05:43 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 2
05:43 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 0
05:43 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
05:43 [1mAdaptiveModel[0m: computing output for mu={Da: [2.0], Pe: [11.0]}:
05:43 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
05:43 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.0], Pe: [11.0]} ...
05:43 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.6758601073218308) above tolerance, discarding MLM output!
05:43 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
05:43 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   ROM solution not accurate enough for training (0.031380029561864885)!
05:43 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.01872083831403845) above tolerance, discarding ROM output!
05:43 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing FOM output (+live solution HAPOD):
05:45 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   extending ROM ...
05:48 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   prolonging MLM training data ...
05:48 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   solving ROM for MLM training ...
05:48 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.0], Pe: [11.0]}
05:48 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
05:48 |   [1mAdaptiveModel[0m: Constructing new ML-ROM-Reductor ...
05:48 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 3 samples ...
05:48 |   [1mAdaptiveModel[0m: returning FOM output!
05:48 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.016524379344978746
05:49 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 2.1 10. ] ...
05:49 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 3
05:49 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 0
05:49 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
05:49 [1mAdaptiveModel[0m: computing output for mu={Da: [2.0999999999999996], Pe: [10.0]}:
05:49 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
05:49 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.0999999999999996], Pe: [10.0]} ...
05:49 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.1300913263761208) above tolerance, discarding MLM output!
05:49 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
05:49 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   ROM solution not accurate enough for training (0.0005575585238246658)!
05:49 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.00033263075659496625) above tolerance, discarding ROM output!
05:49 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing FOM output (+live solution HAPOD):
05:52 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   extending ROM ...
05:59 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   prolonging MLM training data ...
05:59 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   solving ROM for MLM training ...
05:59 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.0999999999999996], Pe: [10.0]}
05:59 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
05:59 |   [1mAdaptiveModel[0m: Constructing new ML-ROM-Reductor ...
05:59 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 4 samples ...
05:59 |   [1mAdaptiveModel[0m: returning FOM output!
05:59 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.006690104391228566
06:00 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.15 9.5 ] ...
06:00 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 4
06:00 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 0
06:00 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
06:00 [1mAdaptiveModel[0m: computing output for mu={Da: [2.1499999999999995], Pe: [9.5]}:
06:00 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
06:00 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.1499999999999995], Pe: [9.5]} ...
06:00 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.3414918107073955) above tolerance, discarding MLM output!
06:00 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
06:00 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   ROM solution not accurate enough for training (2.0235801197224574e-05)!
06:00 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.2072364738261687e-05) above tolerance, discarding ROM output!
06:00 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing FOM output (+live solution HAPOD):
06:04 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   extending ROM ...
06:17 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   prolonging MLM training data ...
06:17 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   solving ROM for MLM training ...
06:17 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.1499999999999995], Pe: [9.5]}
06:17 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
06:17 |   [1mAdaptiveModel[0m: Constructing new ML-ROM-Reductor ...
06:17 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 5 samples ...
06:17 |   [1mAdaptiveModel[0m: returning FOM output!
06:17 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0021842465513228736
06:18 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.25 9.5 ] ...
06:18 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 5
06:18 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 0
06:18 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
06:18 [1mAdaptiveModel[0m: computing output for mu={Da: [2.25], Pe: [9.5]}:
06:18 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
06:18 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.25], Pe: [9.5]} ...
06:18 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.004947244350881885) above tolerance, discarding MLM output!
06:18 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
06:18 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   ROM solution not accurate enough for training (2.287647440014689e-05)!
06:18 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.3647749362251979e-05) above tolerance, discarding ROM output!
06:18 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing FOM output (+live solution HAPOD):
06:22 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   extending ROM ...
06:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   prolonging MLM training data ...
06:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   solving ROM for MLM training ...
06:40 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.25], Pe: [9.5]}
06:40 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
06:40 |   [1mAdaptiveModel[0m: Constructing new ML-ROM-Reductor ...
06:40 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 6 samples ...
06:40 |   [1mAdaptiveModel[0m: returning FOM output!
06:40 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.002132920748740807
06:40 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.375 9.   ] ...
06:40 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
06:40 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 0
06:40 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
06:40 [1mAdaptiveModel[0m: computing output for mu={Da: [2.375], Pe: [9.0]}:
06:40 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
06:40 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.375], Pe: [9.0]} ...
06:40 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.5569002271014902) above tolerance, discarding MLM output!
06:40 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
06:41 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.375], Pe: [9.0]}
06:41 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
06:41 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
06:41 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 13 samples ...
06:41 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 5.674089977505388e-07)
06:41 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.005828606494867572
06:42 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.3 9. ] ...
06:42 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
06:42 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 1
06:42 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
06:42 [1mAdaptiveModel[0m: computing output for mu={Da: [2.2999999999999994], Pe: [9.0]}:
06:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
06:42 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.2999999999999994], Pe: [9.0]} ...
06:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.002412037674951145) above tolerance, discarding MLM output!
06:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
06:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.2999999999999994], Pe: [9.0]}
06:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
06:42 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
06:42 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 21 samples ...
06:43 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 5.429007119603753e-07)
06:43 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.005781088006363394
06:43 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.25 9.  ] ...
06:43 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
06:43 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 2
06:43 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
06:43 [1mAdaptiveModel[0m: computing output for mu={Da: [2.25], Pe: [9.0]}:
06:43 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
06:43 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.25], Pe: [9.0]} ...
06:43 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.0006954421887913874) above tolerance, discarding MLM output!
06:43 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
06:45 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.25], Pe: [9.0]}
06:45 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
06:45 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
06:45 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 30 samples ...
06:45 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 4.198265779308496e-07)
06:45 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.005749256468509236
06:45 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 2.15 10.  ] ...
06:45 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
06:45 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 3
06:45 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
06:45 [1mAdaptiveModel[0m: computing output for mu={Da: [2.1499999999999995], Pe: [10.0]}:
06:45 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
06:45 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.1499999999999995], Pe: [10.0]} ...
06:46 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.00014516104001237125) above tolerance, discarding MLM output!
06:46 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
06:46 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.1499999999999995], Pe: [10.0]}
06:46 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
06:46 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
06:46 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 40 samples ...
06:47 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 5.843937684168463e-08)
06:47 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0065362513947363615
06:48 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.225 9.25 ] ...
06:48 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
06:48 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 4
06:48 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
06:48 [1mAdaptiveModel[0m: computing output for mu={Da: [2.2249999999999996], Pe: [9.25]}:
06:48 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
06:48 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.2249999999999996], Pe: [9.25]} ...
06:48 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.0060525004131365325) above tolerance, discarding MLM output!
06:48 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
06:49 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.2249999999999996], Pe: [9.25]}
06:49 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
06:49 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
06:49 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 51 samples ...
06:50 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 1.9554788436275396e-07)
06:50 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.003916300866875428
06:50 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.175 9.75 ] ...
06:50 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
06:50 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 5
06:50 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
06:50 [1mAdaptiveModel[0m: computing output for mu={Da: [2.175], Pe: [9.75]}:
06:50 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
06:50 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.175], Pe: [9.75]} ...
06:50 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.00216065500681254) above tolerance, discarding MLM output!
06:50 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
06:51 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.175], Pe: [9.75]}
06:51 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
06:51 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
06:51 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 63 samples ...
06:53 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 2.9830815320085196e-08)
06:53 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.004255021009304704
06:53 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.2125 9.375 ] ...
06:53 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
06:53 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 6
06:53 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
06:53 [1mAdaptiveModel[0m: computing output for mu={Da: [2.2124999999999995], Pe: [9.375]}:
06:53 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
06:53 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.2124999999999995], Pe: [9.375]} ...
06:54 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (2.476026178583242e-05) above tolerance, discarding MLM output!
06:54 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
06:55 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.2124999999999995], Pe: [9.375]}
06:55 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
06:55 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
06:55 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 76 samples ...
06:57 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 1.1883827242253569e-07)
06:57 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.003001368263457956
06:57 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.1875 9.625 ] ...
06:57 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
06:57 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 7
06:57 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
06:57 [1mAdaptiveModel[0m: computing output for mu={Da: [2.1875], Pe: [9.625]}:
06:57 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
06:57 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.1875], Pe: [9.625]} ...
06:57 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (2.55271714968337e-05) above tolerance, discarding MLM output!
06:57 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
06:58 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.1875], Pe: [9.625]}
06:58 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
06:58 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
06:58 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 90 samples ...
07:01 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 2.136671901546028e-08)
07:01 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.003141769670845722
07:01 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.20625 9.4375 ] ...
07:01 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:01 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 8
07:01 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 0
07:01 [1mAdaptiveModel[0m: computing output for mu={Da: [2.20625], Pe: [9.4375]}:
07:01 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:01 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.20625], Pe: [9.4375]} ...
07:01 |   [1mAdaptiveModel[0m: returning MLM output (estimated error: 3.4420289809153393e-06)
07:01 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.00255059660638742
07:02 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.19375 9.5625 ] ...
07:02 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:02 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 8
07:02 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 1
07:02 [1mAdaptiveModel[0m: computing output for mu={Da: [2.1937499999999996], Pe: [9.5625]}:
07:02 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:02 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.1937499999999996], Pe: [9.5625]} ...
07:02 |   [1mAdaptiveModel[0m: returning MLM output (estimated error: 2.8816537194026793e-06)
07:02 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0025921637854644936
07:02 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.203125 9.46875 ] ...
07:02 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:02 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 8
07:02 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 2
07:02 [1mAdaptiveModel[0m: computing output for mu={Da: [2.203125], Pe: [9.46875]}:
07:02 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:02 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.203125], Pe: [9.46875]} ...
07:02 |   [1mAdaptiveModel[0m: returning MLM output (estimated error: 4.386268798079487e-06)
07:02 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0023279027955838867
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.196875 9.53125 ] ...
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 8
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 3
07:03 [1mAdaptiveModel[0m: computing output for mu={Da: [2.1968749999999995], Pe: [9.53125]}:
07:03 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:03 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.1968749999999995], Pe: [9.53125]} ...
07:03 |   [1mAdaptiveModel[0m: returning MLM output (estimated error: 4.013902049713621e-06)
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.002319128134588729
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.1984375 9.515625 ] ...
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 8
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 4
07:03 [1mAdaptiveModel[0m: computing output for mu={Da: [2.1984375], Pe: [9.515625]}:
07:03 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:03 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.1984375], Pe: [9.515625]} ...
07:03 |   [1mAdaptiveModel[0m: returning MLM output (estimated error: 4.376744906841881e-06)
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0021830537286383865
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.2984375 9.515625 ] ...
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 8
07:03 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
07:03 [1mAdaptiveModel[0m: computing output for mu={Da: [2.2984375000000004], Pe: [9.515625]}:
07:03 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:03 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.2984375000000004], Pe: [9.515625]} ...
07:03 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (2.2985994117413342e-05) above tolerance, discarding MLM output!
07:03 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
07:04 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.2984375000000004], Pe: [9.515625]}
07:04 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 1.8957689482776312e-07)
07:04 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.002048081693116271
07:05 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.37265625 9.5234375 ] ...
07:05 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:05 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 9
07:05 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
07:05 [1mAdaptiveModel[0m: computing output for mu={Da: [2.3726562500000004], Pe: [9.5234375]}:
07:05 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:05 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.3726562500000004], Pe: [9.5234375]} ...
07:05 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (9.846582650114179e-05) above tolerance, discarding MLM output!
07:05 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
07:05 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.3726562500000004], Pe: [9.5234375]}
07:05 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
07:05 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
07:05 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 106 samples ...
07:09 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 6.738583516360685e-07)
07:09 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.002030985152759091
07:09 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.42421875 9.5078125 ] ...
07:09 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:09 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 10
07:09 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
07:09 [1mAdaptiveModel[0m: computing output for mu={Da: [2.4242187500000005], Pe: [9.5078125]}:
07:09 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:09 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.4242187500000005], Pe: [9.5078125]} ...
07:09 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (2.568872155770072e-05) above tolerance, discarding MLM output!
07:09 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
07:09 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.4242187500000005], Pe: [9.5078125]}
07:09 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
07:09 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
07:10 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 123 samples ...
07:13 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 1.100451401859737e-06)
07:13 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0021669544828482375
07:14 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.36777344 9.50976562] ...
07:14 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:14 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 11
07:14 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
07:14 [1mAdaptiveModel[0m: computing output for mu={Da: [2.3677734375000004], Pe: [9.509765625]}:
07:14 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:14 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.3677734375000004], Pe: [9.509765625]} ...
07:14 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.1976197967680662e-05) above tolerance, discarding MLM output!
07:14 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
07:14 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.3677734375000004], Pe: [9.509765625]}
07:14 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
07:14 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
07:15 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 141 samples ...
07:19 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 6.081247506026385e-07)
07:19 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0021241249308561593
07:19 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.49042969 9.53320312] ...
07:19 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:19 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 12
07:19 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
07:19 [1mAdaptiveModel[0m: computing output for mu={Da: [2.4904296875000007], Pe: [9.533203125]}:
07:19 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:19 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.4904296875000007], Pe: [9.533203125]} ...
07:20 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (9.211443285989123e-05) above tolerance, discarding MLM output!
07:20 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
07:21 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.4904296875000007], Pe: [9.533203125]}
07:21 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
07:21 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
07:21 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 160 samples ...
07:27 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 1.9209913078720562e-06)
07:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0020222935642283044
07:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.61064453 9.54980469] ...
07:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 13
07:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
07:27 [1mAdaptiveModel[0m: computing output for mu={Da: [2.610644531250001], Pe: [9.5498046875]}:
07:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:27 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.610644531250001], Pe: [9.5498046875]} ...
07:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (3.2695114778569066e-05) above tolerance, discarding MLM output!
07:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
07:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.610644531250001], Pe: [9.5498046875]}
07:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
07:27 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
07:28 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 180 samples ...
07:33 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 3.781197378697962e-06)
07:33 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0019669709094138326
07:34 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.61552734 9.56347656] ...
07:34 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:34 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 14
07:34 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
07:34 [1mAdaptiveModel[0m: computing output for mu={Da: [2.615527343750001], Pe: [9.5634765625]}:
07:34 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:34 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.615527343750001], Pe: [9.5634765625]} ...
07:34 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (4.6433499906924396e-05) above tolerance, discarding MLM output!
07:34 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
07:35 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.615527343750001], Pe: [9.5634765625]}
07:35 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
07:35 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
07:35 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 201 samples ...
07:42 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 3.915990575393643e-06)
07:42 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.001873427672817965
07:42 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.7394043  9.59033203] ...
07:42 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:42 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 15
07:42 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
07:42 [1mAdaptiveModel[0m: computing output for mu={Da: [2.7394042968750014], Pe: [9.59033203125]}:
07:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:42 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.7394042968750014], Pe: [9.59033203125]} ...
07:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.738505235742535e-05) above tolerance, discarding MLM output!
07:42 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
07:44 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.7394042968750014], Pe: [9.59033203125]}
07:44 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
07:44 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
07:44 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 223 samples ...
07:52 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 6.45335012580082e-06)
07:52 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0017475037489574942
07:52 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[2.97739258 9.61669922] ...
07:52 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 6
07:52 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 16
07:52 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
07:52 [1mAdaptiveModel[0m: computing output for mu={Da: [2.977392578125002], Pe: [9.61669921875]}:
07:52 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
07:52 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [2.977392578125002], Pe: [9.61669921875]} ...
07:52 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.00012119789698476472) above tolerance, discarding MLM output!
07:52 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
07:53 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   ROM solution not accurate enough for training (2.1123056228948354e-05)!
07:53 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.2601687311380092e-05) above tolerance, discarding ROM output!
07:53 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing FOM output (+live solution HAPOD):
07:56 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   extending ROM ...
08:18 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   prolonging MLM training data ...
08:18 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   solving ROM for MLM training ...
08:19 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [2.977392578125002], Pe: [9.61669921875]}
08:19 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
08:19 |   [1mAdaptiveModel[0m: Constructing new ML-ROM-Reductor ...
08:19 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 23 samples ...
08:20 |   [1mAdaptiveModel[0m: returning FOM output!
08:20 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0016836939065360702
08:20 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[3.27976074 9.66333008] ...
08:20 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 7
08:20 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 16
08:20 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
08:20 [1mAdaptiveModel[0m: computing output for mu={Da: [3.279760742187502], Pe: [9.663330078125]}:
08:20 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
08:20 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [3.279760742187502], Pe: [9.663330078125]} ...
08:20 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.0006005228972717016) above tolerance, discarding MLM output!
08:20 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
08:22 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [3.279760742187502], Pe: [9.663330078125]}
08:22 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
08:22 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
08:22 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 47 samples ...
08:24 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 9.658816313094448e-07)
08:24 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0015097539991696246
08:24 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[3.40852051 9.70385742] ...
08:24 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 7
08:24 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 17
08:24 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
08:24 [1mAdaptiveModel[0m: computing output for mu={Da: [3.4085205078125025], Pe: [9.703857421875]}:
08:24 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
08:24 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [3.4085205078125025], Pe: [9.703857421875]} ...
08:24 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.0003110630916992923) above tolerance, discarding MLM output!
08:24 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
08:25 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [3.4085205078125025], Pe: [9.703857421875]}
08:25 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
08:25 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
08:25 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 72 samples ...
08:28 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 1.7831609015212502e-06)
08:28 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.001288212715140534
08:28 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[3.8074585  9.78088379] ...
08:28 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 7
08:28 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 18
08:28 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
08:28 [1mAdaptiveModel[0m: computing output for mu={Da: [3.807458496093753], Pe: [9.7808837890625]}:
08:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
08:28 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [3.807458496093753], Pe: [9.7808837890625]} ...
08:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.0013814397592273602) above tolerance, discarding MLM output!
08:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
08:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [3.807458496093753], Pe: [9.7808837890625]}
08:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
08:30 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
08:30 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 98 samples ...
08:34 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 5.742576803702976e-06)
08:34 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0009469470092668877
08:34 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[4.34781494 9.85388184] ...
08:34 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 7
08:34 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 19
08:34 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
08:34 [1mAdaptiveModel[0m: computing output for mu={Da: [4.347814941406254], Pe: [9.8538818359375]}:
08:34 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
08:34 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [4.347814941406254], Pe: [9.8538818359375]} ...
08:34 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.0008149677794773159) above tolerance, discarding MLM output!
08:34 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
08:35 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   ROM solution not accurate enough for training (2.548627842364835e-05)!
08:35 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.5204717913189006e-05) above tolerance, discarding ROM output!
08:35 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing FOM output (+live solution HAPOD):
08:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   extending ROM ...
09:07 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   prolonging MLM training data ...
09:07 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   solving ROM for MLM training ...
09:08 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [4.347814941406254], Pe: [9.8538818359375]}
09:08 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
09:08 |   [1mAdaptiveModel[0m: Constructing new ML-ROM-Reductor ...
09:08 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 27 samples ...
09:09 |   [1mAdaptiveModel[0m: returning FOM output!
09:09 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0007094438182264039
09:10 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[5.15202026 9.98565674] ...
09:10 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
09:10 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 19
09:10 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
09:10 [1mAdaptiveModel[0m: computing output for mu={Da: [5.152020263671879], Pe: [9.98565673828125]}:
09:10 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
09:10 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.152020263671879], Pe: [9.98565673828125]} ...
09:10 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.008658437675105306) above tolerance, discarding MLM output!
09:10 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
09:12 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.152020263671879], Pe: [9.98565673828125]}
09:12 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
09:12 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
09:12 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 55 samples ...
09:14 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 5.478802708566223e-07)
09:14 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0003654279660115986
09:15 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.67971802 10.10321045] ...
09:15 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
09:15 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 20
09:15 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
09:15 [1mAdaptiveModel[0m: computing output for mu={Da: [5.67971801757813], Pe: [10.10321044921875]}:
09:15 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
09:15 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.67971801757813], Pe: [10.10321044921875]} ...
09:15 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.004046763474449473) above tolerance, discarding MLM output!
09:15 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
09:17 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.67971801757813], Pe: [10.10321044921875]}
09:17 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
09:17 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
09:17 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 84 samples ...
09:21 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 1.5567076719215209e-06)
09:21 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0003960322711426562
09:21 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 7.02427979 10.3079834 ] ...
09:21 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
09:21 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 21
09:21 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
09:21 [1mAdaptiveModel[0m: computing output for mu={Da: [7.024279785156256], Pe: [10.3079833984375]}:
09:21 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
09:21 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [7.024279785156256], Pe: [10.3079833984375]} ...
09:21 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.07565313539806749) above tolerance, discarding MLM output!
09:21 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
09:22 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [7.024279785156256], Pe: [10.3079833984375]}
09:22 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
09:22 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
09:22 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 114 samples ...
09:28 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 7.590516234758103e-06)
09:28 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.001184271655839647
09:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[4.61166382 9.91265869] ...
09:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
09:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 22
09:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
09:29 [1mAdaptiveModel[0m: computing output for mu={Da: [4.6116638183593786], Pe: [9.91265869140625]}:
09:29 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
09:29 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [4.6116638183593786], Pe: [9.91265869140625]} ...
09:29 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.0002048226465377849) above tolerance, discarding MLM output!
09:29 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
09:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [4.6116638183593786], Pe: [9.91265869140625]}
09:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
09:30 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
09:30 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 145 samples ...
09:39 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 1.081800648506304e-07)
09:39 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0004245258198387024
09:40 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 6.22007446 10.1762085 ] ...
09:40 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
09:40 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 23
09:40 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
09:40 [1mAdaptiveModel[0m: computing output for mu={Da: [6.220074462890631], Pe: [10.17620849609375]}:
09:40 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
09:40 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [6.220074462890631], Pe: [10.17620849609375]} ...
09:40 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.0008523797643375022) above tolerance, discarding MLM output!
09:40 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
09:41 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [6.220074462890631], Pe: [10.17620849609375]}
09:41 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
09:41 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
09:41 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 177 samples ...
09:52 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 3.212821572966727e-06)
09:52 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0006910008161692717
09:53 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[5.01376648 9.97854614] ...
09:53 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
09:53 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 24
09:53 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
09:53 [1mAdaptiveModel[0m: computing output for mu={Da: [5.013766479492192], Pe: [9.978546142578125]}:
09:53 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
09:53 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.013766479492192], Pe: [9.978546142578125]} ...
09:53 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (7.300938152047993e-05) above tolerance, discarding MLM output!
09:53 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
09:54 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.013766479492192], Pe: [9.978546142578125]}
09:54 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
09:54 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
09:54 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 210 samples ...
10:07 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 4.109291410844162e-07)
10:07 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0001896153212587147
10:07 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[4.48606873 9.86099243] ...
10:07 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
10:07 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 25
10:07 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
10:07 [1mAdaptiveModel[0m: computing output for mu={Da: [4.486068725585941], Pe: [9.860992431640625]}:
10:07 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
10:07 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [4.486068725585941], Pe: [9.860992431640625]} ...
10:08 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (6.445326316192647e-05) above tolerance, discarding MLM output!
10:08 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
10:08 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [4.486068725585941], Pe: [9.860992431640625]}
10:08 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
10:08 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
10:08 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 244 samples ...
10:23 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 3.6268559512034454e-08)
10:23 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0007393788320894275
10:24 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.38130569 10.04265594] ...
10:24 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
10:24 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 26
10:24 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
10:24 [1mAdaptiveModel[0m: computing output for mu={Da: [5.3813056945800835], Pe: [10.042655944824219]}:
10:24 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
10:24 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.3813056945800835], Pe: [10.042655944824219]} ...
10:24 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (7.334771853356206e-05) above tolerance, discarding MLM output!
10:24 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
10:25 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.3813056945800835], Pe: [10.042655944824219]}
10:25 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
10:25 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
10:25 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 279 samples ...
10:44 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 9.171222799154724e-07)
10:44 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0003266354742157869
10:45 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.24305191 10.03554535] ...
10:45 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
10:45 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 27
10:45 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
10:45 [1mAdaptiveModel[0m: computing output for mu={Da: [5.243051910400396], Pe: [10.035545349121094]}:
10:45 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
10:45 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.243051910400396], Pe: [10.035545349121094]} ...
10:45 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (0.00012659932808617634) above tolerance, discarding MLM output!
10:45 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
10:46 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.243051910400396], Pe: [10.035545349121094]}
10:46 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
10:46 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
10:46 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 315 samples ...
11:05 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 7.252348741229246e-07)
11:05 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.00014468707918670679
11:06 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.28856773 10.06048965] ...
11:06 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
11:06 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 28
11:06 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
11:06 [1mAdaptiveModel[0m: computing output for mu={Da: [5.288567733764655], Pe: [10.060489654541016]}:
11:06 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
11:06 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.288567733764655], Pe: [10.060489654541016]} ...
11:06 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (4.9990030525872785e-05) above tolerance, discarding MLM output!
11:06 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
11:07 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.288567733764655], Pe: [10.060489654541016]}
11:07 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
11:07 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
11:07 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 352 samples ...
11:30 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 8.258695094923539e-07)
11:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0002887576960033892
11:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[4.8755127  9.97143555] ...
11:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
11:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 29
11:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
11:30 [1mAdaptiveModel[0m: computing output for mu={Da: [4.875512695312505], Pe: [9.971435546875]}:
11:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
11:30 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [4.875512695312505], Pe: [9.971435546875]} ...
11:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.5118521549508703e-05) above tolerance, discarding MLM output!
11:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
11:32 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [4.875512695312505], Pe: [9.971435546875]}
11:32 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
11:32 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
11:32 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 390 samples ...
11:56 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 3.001642762249657e-07)
11:56 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.00013857604047234212
11:56 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[4.6226162  9.93582535] ...
11:56 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
11:56 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 30
11:56 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
11:56 [1mAdaptiveModel[0m: computing output for mu={Da: [4.622616195678717], Pe: [9.93582534790039]}:
11:56 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
11:56 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [4.622616195678717], Pe: [9.93582534790039]} ...
11:57 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (2.2647030753865578e-05) above tolerance, discarding MLM output!
11:57 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
11:58 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [4.622616195678717], Pe: [9.93582534790039]}
11:58 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
11:58 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
11:58 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 429 samples ...
12:24 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 1.3481609105163803e-07)
12:24 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0002626270474399856
12:25 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.10479813 10.02843475] ...
12:25 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
12:25 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 31
12:25 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 5
12:25 [1mAdaptiveModel[0m: computing output for mu={Da: [5.104798126220709], Pe: [10.028434753417969]}:
12:25 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
12:25 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.104798126220709], Pe: [10.028434753417969]} ...
12:25 |   [1mAdaptiveModel[0m: returning MLM output (estimated error: 7.819050101234177e-06)
12:25 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0001561653782181649
12:25 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.08204021 10.0159626 ] ...
12:25 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
12:25 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 31
12:25 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 6
12:25 [1mAdaptiveModel[0m: computing output for mu={Da: [5.08204021453858], Pe: [10.015962600708008]}:
12:25 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
12:25 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.08204021453858], Pe: [10.015962600708008]} ...
12:25 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.5298687789850818e-05) above tolerance, discarding MLM output!
12:25 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
12:26 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.08204021453858], Pe: [10.015962600708008]}
12:26 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 5.233463875176215e-07)
12:26 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 7.486840202170983e-05
12:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[4.714501  9.9518528] ...
12:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
12:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 32
12:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 6
12:27 [1mAdaptiveModel[0m: computing output for mu={Da: [4.714500999450689], Pe: [9.951852798461914]}:
12:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
12:27 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [4.714500999450689], Pe: [9.951852798461914]} ...
12:27 |   [1mAdaptiveModel[0m: returning MLM output (estimated error: 5.547792479767625e-06)
12:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.00019537075449966267
12:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.11091418 10.01462221] ...
12:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
12:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 32
12:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 7
12:27 [1mAdaptiveModel[0m: computing output for mu={Da: [5.110914182662969], Pe: [10.014622211456299]}:
12:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
12:27 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.110914182662969], Pe: [10.014622211456299]} ...
12:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.8238078461077595e-05) above tolerance, discarding MLM output!
12:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
12:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.110914182662969], Pe: [10.014622211456299]}
12:28 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 5.489095693066177e-07)
12:28 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 7.45738036098953e-05
12:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.3174417  10.05914927] ...
12:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
12:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 33
12:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 7
12:29 [1mAdaptiveModel[0m: computing output for mu={Da: [5.317441701889045], Pe: [10.059149265289307]}:
12:29 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
12:29 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.317441701889045], Pe: [10.059149265289307]} ...
12:29 |   [1mAdaptiveModel[0m: returning MLM output (estimated error: 7.465561774192439e-06)
12:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0002630036111947332
12:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[4.98599495 9.99336398] ...
12:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
12:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 33
12:29 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 8
12:29 [1mAdaptiveModel[0m: computing output for mu={Da: [4.98599494695664], Pe: [9.993363976478577]}:
12:29 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
12:29 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [4.98599494695664], Pe: [9.993363976478577]} ...
12:29 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.768789152336622e-05) above tolerance, discarding MLM output!
12:29 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
12:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [4.98599494695664], Pe: [9.993363976478577]}
12:30 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 4.079154783547098e-07)
12:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 3.934142179848332e-05
12:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[5.01486892 9.99202359] ...
12:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
12:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 34
12:30 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 8
12:30 [1mAdaptiveModel[0m: computing output for mu={Da: [5.0148689150810295], Pe: [9.992023587226868]}:
12:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
12:30 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.0148689150810295], Pe: [9.992023587226868]} ...
12:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.9747428475182963e-05) above tolerance, discarding MLM output!
12:30 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
12:32 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.0148689150810295], Pe: [9.992023587226868]}
12:32 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
12:32 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
12:32 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 472 samples ...
13:01 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 4.296069463676808e-07)
13:01 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 7.84551012303139e-05
13:01 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.06524739 10.00997785] ...
13:01 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
13:01 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 35
13:01 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 8
13:01 [1mAdaptiveModel[0m: computing output for mu={Da: [5.065247389674193], Pe: [10.009977847337723]}:
13:01 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
13:01 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.065247389674193], Pe: [10.009977847337723]} ...
13:01 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.7050179208861226e-05) above tolerance, discarding MLM output!
13:01 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
13:02 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.065247389674193], Pe: [10.009977847337723]}
13:02 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
13:02 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
13:03 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 516 samples ...
13:35 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 4.989132150730463e-07)
13:35 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 4.051991151591931e-05
13:35 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[4.94032815 9.98871961] ...
13:35 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
13:35 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 36
13:35 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 8
13:35 [1mAdaptiveModel[0m: computing output for mu={Da: [4.9403281539678625], Pe: [9.98871961236]}:
13:35 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
13:35 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [4.9403281539678625], Pe: [9.98871961236]} ...
13:35 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.5500604035241242e-05) above tolerance, discarding MLM output!
13:35 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
13:37 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [4.9403281539678625], Pe: [9.98871961236]}
13:37 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
13:37 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
13:38 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 561 samples ...
14:15 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 3.668034619336844e-07)
14:15 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 4.746515368942231e-05
14:15 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[4.98297466 9.99519526] ...
14:15 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
14:15 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 37
14:15 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 8
14:15 [1mAdaptiveModel[0m: computing output for mu={Da: [4.98297466114164], Pe: [9.995195262134075]}:
14:15 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
14:15 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [4.98297466114164], Pe: [9.995195262134075]} ...
14:15 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.6696435162225743e-05) above tolerance, discarding MLM output!
14:15 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
14:16 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [4.98297466114164], Pe: [9.995195262134075]}
14:16 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
14:16 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
14:17 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 607 samples ...
14:55 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 4.0801284094341994e-07)
14:55 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 2.318148784137032e-05
14:56 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[4.90372222 9.97858139] ...
14:56 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
14:56 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 38
14:56 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 8
14:56 [1mAdaptiveModel[0m: computing output for mu={Da: [4.903722218424088], Pe: [9.978581391274929]}:
14:56 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
14:56 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [4.903722218424088], Pe: [9.978581391274929]} ...
14:56 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.5993861206446635e-05) above tolerance, discarding MLM output!
14:56 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
14:57 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [4.903722218424088], Pe: [9.978581391274929]}
14:57 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
14:57 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
14:58 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 654 samples ...
15:39 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 3.277874544216232e-07)
15:39 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 0.0001015298554597581
15:39 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.0248661  10.00212873] ...
15:39 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
15:39 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 39
15:39 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 8
15:39 [1mAdaptiveModel[0m: computing output for mu={Da: [5.0248660968616665], Pe: [10.002128733322024]}:
15:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
15:39 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.0248660968616665], Pe: [10.002128733322024]} ...
15:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.7303340686602204e-05) above tolerance, discarding MLM output!
15:39 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
15:40 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.0248660968616665], Pe: [10.002128733322024]}
15:40 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
15:40 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
15:41 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 702 samples ...
16:26 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 4.5204348039496526e-07)
16:26 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 1.881380475079672e-05
16:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.02184581 10.00396002] ...
16:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
16:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 40
16:27 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 8
16:27 [1mAdaptiveModel[0m: computing output for mu={Da: [5.021845811046666], Pe: [10.003960018977523]}:
16:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
16:27 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.021845811046666], Pe: [10.003960018977523]} ...
16:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.6151498070496876e-05) above tolerance, discarding MLM output!
16:27 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
16:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.021845811046666], Pe: [10.003960018977523]}
16:28 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
16:28 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
16:28 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 751 samples ...
17:33 |   [1mAdaptiveModel[0m: returning ROM output (estimated error: 4.520837717673553e-07)
17:33 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: ... objective is 1.987670207961173e-05
17:33 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: evaluating model for mu=[ 5.06373725 10.01089349] ...
17:33 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used FOM evals: 8
17:33 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used ROM evals: 41
17:33 [1;34m|DEBUG|[0m[1mNelder-Mead[0m: - used MLM evals: 8
17:33 [1mAdaptiveModel[0m: computing output for mu={Da: [5.063737246766692], Pe: [10.010893490165472]}:
17:33 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing MLM output:
17:33 |   [1mVkogaStateModel[0m: Solving HaPOD-VKOGA-instationary_Spe10ChannelProblem_DuneGDT_P1_CG for {Da: [5.063737246766692], Pe: [10.010893490165472]} ...
17:33 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   estimated error (1.6451058569821392e-05) above tolerance, discarding MLM output!
17:33 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m: computing ROM output:
17:35 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   collecting state for mu={Da: [5.063737246766692], Pe: [10.010893490165472]}
17:35 |   [1;34m|DEBUG|[0m[1mAdaptiveModel[0m:   training MLM ...
17:35 |   [1mAdaptiveModel[0m: Replacing RB-ROM in MLM ...
17:35 |   [1mVkogaStateReductor[0m: Fitting VKOGA model to 801 samples ...
